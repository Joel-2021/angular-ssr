{"version":3,"file":"rageclick.js","sourceRoot":"","sources":["../../../src/extensions/rageclick.ts"],"names":[],"mappings":"AAKA,IAAM,uBAAuB,GAAG,EAAE,CAAA;AAClC,IAAM,qBAAqB,GAAG,IAAI,CAAA;AAClC,IAAM,sBAAsB,GAAG,CAAC,CAAA;AAEhC;IAKI,mBAAY,QAAe,EAAE,OAA0C;QAA1C,wBAAA,EAAA,UAAU,QAAQ,CAAC,UAAU,CAAC,WAAW,CAAC;QACnE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAA;QAChB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;IAC1B,CAAC;IAED,yBAAK,GAAL,UAAM,CAAS,EAAE,CAAS,EAAE,SAAiB;QACzC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAM;SACT;QAED,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;QACrD,IACI,SAAS;YACT,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,uBAAuB;YAC/E,SAAS,GAAG,SAAS,CAAC,SAAS,GAAG,qBAAqB,EACzD;YACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,SAAS,WAAA,EAAE,CAAC,CAAA;YAErC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,sBAAsB,EAAE;gBAC/C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA;aACtC;SACJ;aAAM;YACH,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,SAAS,WAAA,EAAE,CAAC,CAAA;SACtC;IACL,CAAC;IACL,gBAAC;AAAD,CAAC,AA/BD,IA+BC","sourcesContent":["// Naive rage click implementation: If mouse has not moved than RAGE_CLICK_THRESHOLD_PX\n// over RAGE_CLICK_CLICK_COUNT clicks with max RAGE_CLICK_TIMEOUT_MS between clicks, it's\n// counted as a rage click\nimport { Tavas } from '../posthog-core'\n\nconst RAGE_CLICK_THRESHOLD_PX = 30\nconst RAGE_CLICK_TIMEOUT_MS = 1000\nconst RAGE_CLICK_CLICK_COUNT = 3\n\nexport default class RageClick {\n    instance: Tavas\n    clicks: { x: number; y: number; timestamp: number }[]\n    enabled: boolean\n\n    constructor(instance: Tavas, enabled = instance.get_config('rageclick')) {\n        this.clicks = []\n        this.instance = instance\n        this.enabled = enabled\n    }\n\n    click(x: number, y: number, timestamp: number) {\n        if (!this.enabled) {\n            return\n        }\n\n        const lastClick = this.clicks[this.clicks.length - 1]\n        if (\n            lastClick &&\n            Math.abs(x - lastClick.x) + Math.abs(y - lastClick.y) < RAGE_CLICK_THRESHOLD_PX &&\n            timestamp - lastClick.timestamp < RAGE_CLICK_TIMEOUT_MS\n        ) {\n            this.clicks.push({ x, y, timestamp })\n\n            if (this.clicks.length === RAGE_CLICK_CLICK_COUNT) {\n                this.instance.capture('$rageclick')\n            }\n        } else {\n            this.clicks = [{ x, y, timestamp }]\n        }\n    }\n}\n"]}
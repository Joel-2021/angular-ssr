{"version":3,"file":"sentry-integration.js","sourceRoot":"","sources":["../../../src/extensions/sentry-integration.ts"],"names":[],"mappings":"AAqBA;IAKI,2BAAY,QAAe,EAAE,YAAqB,EAAE,SAAkB,EAAE,MAAe;QACnF,gEAAgE;QAChE,2EAA2E;QAC3E,4CAA4C;QAC5C,IAAI,CAAC,IAAI,GAAG,YAAY,CAAA;QACxB,IAAI,CAAC,SAAS,GAAG,UAAU,uBAA2D;YAClF,uBAAuB,CAAC,UAAC,KAAY;;gBACjC,IAAI,KAAK,CAAC,KAAK,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ;oBAAE,OAAO,KAAK,CAAA;gBAC/D,IAAI,CAAC,KAAK,CAAC,IAAI;oBAAE,KAAK,CAAC,IAAI,GAAG,EAAE,CAAA;gBAChC,IAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAA;gBAChE,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,IAAI,GAAG,UAAU,GAAG,QAAQ,CAAC,eAAe,EAAE,CAAA;gBACjF,IAAI,QAAQ,CAAC,uBAAuB,EAAE,EAAE;oBACpC,KAAK,CAAC,IAAI,CAAC,uBAAuB,CAAC;wBAC/B,IAAI;4BACJ,kCAAkC;4BAClC,QAAQ,CAAC,cAAc,CAAC,6BAA6B,CAAC,IAAI,CAAC,CAAC,SAAS,CAAA;iBAC5E;gBACD,IAAM,UAAU,GAAG,CAAA,MAAA,KAAK,CAAC,SAAS,0CAAE,MAAM,KAAI,EAAE,CAAA;gBAChD,IAAM,IAAI,GAAe;oBACrB,gBAAgB,EAAE,KAAK,CAAC,QAAQ;oBAChC,iBAAiB,EAAE,KAAK,CAAC,SAAS;oBAClC,yBAAyB,EAAE,MAAA,UAAU,CAAC,CAAC,CAAC,0CAAE,KAAK;oBAC/C,sBAAsB,EAAE,MAAA,UAAU,CAAC,CAAC,CAAC,0CAAE,IAAI;oBAC3C,YAAY,EAAE,KAAK,CAAC,IAAI;iBAC3B,CAAA;gBACD,IAAI,YAAY,IAAI,SAAS;oBACzB,IAAI,CAAC,aAAa,CAAC;wBACf,CAAC,MAAM,IAAI,kCAAkC,CAAC;4BAC9C,YAAY;4BACZ,mBAAmB;4BACnB,SAAS;4BACT,SAAS;4BACT,KAAK,CAAC,QAAQ,CAAA;gBACtB,QAAQ,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;gBACpC,OAAO,KAAK,CAAA;YAChB,CAAC,CAAC,CAAA;QACN,CAAC,CAAA;IACL,CAAC;IACL,wBAAC;AAAD,CAAC,AA3CD,IA2CC","sourcesContent":["/**\n * Integrate Sentry with PostHog. This will add a direct link to the person in Sentry, and an $exception event in PostHog\n *\n * ### Usage\n *\n *     Sentry.init({\n *          dsn: 'https://example',\n *          integrations: [\n *              new posthog.SentryIntegration(posthog)\n *          ]\n *     })\n *\n * @param {Object} [posthog] The posthog object\n * @param {string} [organization] Optional: The Sentry organization, used to send a direct link from PostHog to Sentry\n * @param {Number} [projectId] Optional: The Sentry project id, used to send a direct link from PostHog to Sentry\n * @param {string} [prefix] Optional: Url of a self-hosted sentry instance (default: https://sentry.io/organizations/)\n */\nimport { Event, EventProcessor, Hub, Integration } from '@sentry/types'\nimport { Properties } from '../types'\nimport { Tavas } from '../posthog-core'\n\nexport class SentryIntegration implements Integration {\n    name: string\n\n    setupOnce: (addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub) => void\n\n    constructor(_posthog: Tavas, organization?: string, projectId?: number, prefix?: string) {\n        // setupOnce gets called by Sentry when it intializes the plugin\n        // 'this' is not this: PostHogLib object, but the new class that's created.\n        // TODO: refactor to a real class. The types\n        this.name = 'posthog-js'\n        this.setupOnce = function (addGlobalEventProcessor: (callback: EventProcessor) => void) {\n            addGlobalEventProcessor((event: Event) => {\n                if (event.level !== 'error' || !_posthog.__loaded) return event\n                if (!event.tags) event.tags = {}\n                const host = _posthog.config.ui_host || _posthog.config.api_host\n                event.tags['PostHog Person URL'] = host + '/person/' + _posthog.get_distinct_id()\n                if (_posthog.sessionRecordingStarted()) {\n                    event.tags['PostHog Recording URL'] =\n                        host +\n                        '/recordings/#sessionRecordingId=' +\n                        _posthog.sessionManager.checkAndGetSessionAndWindowId(true).sessionId\n                }\n                const exceptions = event.exception?.values || []\n                const data: Properties = {\n                    $sentry_event_id: event.event_id,\n                    $sentry_exception: event.exception,\n                    $sentry_exception_message: exceptions[0]?.value,\n                    $sentry_exception_type: exceptions[0]?.type,\n                    $sentry_tags: event.tags,\n                }\n                if (organization && projectId)\n                    data['$sentry_url'] =\n                        (prefix || 'https://sentry.io/organizations/') +\n                        organization +\n                        '/issues/?project=' +\n                        projectId +\n                        '&query=' +\n                        event.event_id\n                _posthog.capture('$exception', data)\n                return event\n            })\n        }\n    }\n}\n"]}
{"version":3,"file":"autocapture.js","sourceRoot":"","sources":["../../src/autocapture.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    _bind_instance_methods,\n    _each,\n    _extend,\n    _includes,\n    _isFunction,\n    _isUndefined,\n    _register_event,\n    _safewrap_instance_methods,\n    logger,\n} from './utils'\nimport {\n    getClassName,\n    getSafeText,\n    isElementNode,\n    isSensitiveElement,\n    isTag,\n    isTextNode,\n    shouldCaptureDomEvent,\n    shouldCaptureElement,\n    shouldCaptureValue,\n    autocaptureCompatibleElements,\n    isAngularStyleAttr,\n    isDocumentFragment,\n} from './autocapture-utils'\nimport RageClick from './extensions/rageclick'\nimport { AutocaptureConfig, AutoCaptureCustomProperty, DecideResponse, Properties } from './types'\nimport { Tavas } from './posthog-core'\n\nconst autocapture = {\n    _initializedTokens: [] as string[],\n\n    _previousElementSibling: function (el: Element): Element | null {\n        if (el.previousElementSibling) {\n            return el.previousElementSibling\n        } else {\n            let _el: Element | null = el\n            do {\n                _el = _el.previousSibling as Element | null // resolves to ChildNode->Node, which is Element's parent class\n            } while (_el && !isElementNode(_el))\n            return _el\n        }\n    },\n\n    _getPropertiesFromElement: function (elem: Element, maskInputs: boolean, maskText: boolean): Properties {\n        const tag_name = elem.tagName.toLowerCase()\n        const props: Properties = {\n            tag_name: tag_name,\n        }\n        if (autocaptureCompatibleElements.indexOf(tag_name) > -1 && !maskText) {\n            props['$el_text'] = getSafeText(elem)\n        }\n\n        const classes = getClassName(elem)\n        if (classes.length > 0)\n            props['classes'] = classes.split(' ').filter(function (c) {\n                return c !== ''\n            })\n\n        _each(elem.attributes, function (attr: Attr) {\n            // Only capture attributes we know are safe\n            if (isSensitiveElement(elem) && ['name', 'id', 'class'].indexOf(attr.name) === -1) return\n\n            if (!maskInputs && shouldCaptureValue(attr.value) && !isAngularStyleAttr(attr.name)) {\n                props['attr__' + attr.name] = attr.value\n            }\n        })\n\n        let nthChild = 1\n        let nthOfType = 1\n        let currentElem: Element | null = elem\n        while ((currentElem = this._previousElementSibling(currentElem))) {\n            // eslint-disable-line no-cond-assign\n            nthChild++\n            if (currentElem.tagName === elem.tagName) {\n                nthOfType++\n            }\n        }\n        props['nth_child'] = nthChild\n        props['nth_of_type'] = nthOfType\n\n        return props\n    },\n\n    _getDefaultProperties: function (eventType: string): Properties {\n        return {\n            $event_type: eventType,\n            $ce_version: 1,\n        }\n    },\n\n    _extractCustomPropertyValue: function (customProperty: AutoCaptureCustomProperty): string {\n        const propValues: string[] = []\n        _each(document.querySelectorAll(customProperty['css_selector']), function (matchedElem) {\n            let value\n\n            if (['input', 'select'].indexOf(matchedElem.tagName.toLowerCase()) > -1) {\n                value = matchedElem['value']\n            } else if (matchedElem['textContent']) {\n                value = matchedElem['textContent']\n            }\n\n            if (shouldCaptureValue(value)) {\n                propValues.push(value)\n            }\n        })\n        return propValues.join(', ')\n    },\n\n    // TODO: delete custom_properties after changeless typescript refactor\n    _getCustomProperties: function (targetElementList: Element[]): Properties {\n        const props: Properties = {} // will be deleted\n        _each(this._customProperties, (customProperty) => {\n            _each(customProperty['event_selectors'], (eventSelector) => {\n                const eventElements = document.querySelectorAll(eventSelector)\n                _each(eventElements, (eventElement) => {\n                    if (_includes(targetElementList, eventElement) && shouldCaptureElement(eventElement)) {\n                        props[customProperty['name']] = this._extractCustomPropertyValue(customProperty)\n                    }\n                })\n            })\n        })\n        return props\n    },\n\n    _getEventTarget: function (e: Event): Element | null {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Event/target#Compatibility_notes\n        if (typeof e.target === 'undefined') {\n            return (e.srcElement as Element) || null\n        } else {\n            if ((e.target as HTMLElement)?.shadowRoot) {\n                return (e.composedPath()[0] as Element) || null\n            }\n            return (e.target as Element) || null\n        }\n    },\n\n    _captureEvent: function (e: Event, instance: Tavas): boolean | void {\n        /*** Don't mess with this code without running IE8 tests on it ***/\n        let target = this._getEventTarget(e)\n        if (isTextNode(target)) {\n            // defeat Safari bug (see: http://www.quirksmode.org/js/events_properties.html)\n            target = (target.parentNode || null) as Element | null\n        }\n\n        if (e.type === 'click' && e instanceof MouseEvent) {\n            this.rageclicks?.click(e.clientX, e.clientY, new Date().getTime())\n        }\n\n        if (target && shouldCaptureDomEvent(target, e, this.config)) {\n            const targetElementList = [target]\n            let curEl = target\n            while (curEl.parentNode && !isTag(curEl, 'body')) {\n                if (isDocumentFragment(curEl.parentNode)) {\n                    targetElementList.push((curEl.parentNode as any).host)\n                    curEl = (curEl.parentNode as any).host\n                    continue\n                }\n                targetElementList.push(curEl.parentNode as Element)\n                curEl = curEl.parentNode as Element\n            }\n\n            const elementsJson: Properties[] = []\n            let href,\n                explicitNoCapture = false\n            _each(targetElementList, (el) => {\n                const shouldCaptureEl = shouldCaptureElement(el)\n\n                // if the element or a parent element is an anchor tag\n                // include the href as a property\n                if (el.tagName.toLowerCase() === 'a') {\n                    href = el.getAttribute('href')\n                    href = shouldCaptureEl && shouldCaptureValue(href) && href\n                }\n\n                // allow users to programmatically prevent capturing of elements by adding class 'ph-no-capture'\n                const classes = getClassName(el).split(' ')\n                if (_includes(classes, 'ph-no-capture')) {\n                    explicitNoCapture = true\n                }\n\n                elementsJson.push(\n                    this._getPropertiesFromElement(\n                        el,\n                        instance.get_config('mask_all_element_attributes'),\n                        instance.get_config('mask_all_text')\n                    )\n                )\n            })\n\n            if (!instance.get_config('mask_all_text')) {\n                elementsJson[0]['$el_text'] = getSafeText(target)\n            }\n\n            if (href) {\n                elementsJson[0]['attr__href'] = href\n            }\n\n            if (explicitNoCapture) {\n                return false\n            }\n\n            const props = _extend(\n                this._getDefaultProperties(e.type),\n                {\n                    $elements: elementsJson,\n                },\n                this._getCustomProperties(targetElementList)\n            )\n\n            instance.capture('$autocapture', props)\n            return true\n        }\n    },\n\n    // only reason is to stub for unit tests\n    // since you can't override window.location props\n    _navigate: function (href: string): void {\n        window.location.href = href\n    },\n\n    _addDomEventHandlers: function (instance: Tavas): void {\n        const handler = (e: Event) => {\n            e = e || window.event\n            this._captureEvent(e, instance)\n        }\n        _register_event(document, 'submit', handler, false, true)\n        _register_event(document, 'change', handler, false, true)\n        _register_event(document, 'click', handler, false, true)\n    },\n\n    _customProperties: [] as AutoCaptureCustomProperty[],\n    rageclicks: null as RageClick | null,\n    config: undefined as AutocaptureConfig | undefined,\n\n    init: function (instance: Tavas): void {\n        if (typeof instance.__autocapture !== 'boolean') {\n            this.config = instance.__autocapture\n        }\n\n        // precompile the regex\n        if (this.config?.url_allowlist) {\n            this.config.url_allowlist = this.config.url_allowlist.map((url) => new RegExp(url))\n        }\n\n        this.rageclicks = new RageClick(instance)\n    },\n\n    afterDecideResponse: function (response: DecideResponse, instance: Tavas): void {\n        const token = instance.get_config('token')\n        if (this._initializedTokens.indexOf(token) > -1) {\n            logger.log('autocapture already initialized for token \"' + token + '\"')\n            return\n        }\n\n        this._initializedTokens.push(token)\n\n        if (\n            response &&\n            response['config'] &&\n            response['config']['enable_collect_everything'] &&\n            instance.get_config('autocapture')\n        ) {\n            // TODO: delete custom_properties after changeless typescript refactor\n            if (response['custom_properties']) {\n                this._customProperties = response['custom_properties']\n            }\n            this._addDomEventHandlers(instance)\n        } else {\n            instance['__autocapture'] = false\n        }\n    },\n\n    // this is a mechanism to ramp up CE with no server-side interaction.\n    // when CE is active, every page load results in a decide request. we\n    // need to gently ramp this up so we don't overload decide. this decides\n    // deterministically if CE is enabled for this project by modding the char\n    // value of the project token.\n    enabledForProject: function (\n        token: string | null | undefined,\n        numBuckets: number,\n        numEnabledBuckets: number\n    ): boolean {\n        if (!token) {\n            return true\n        }\n        numBuckets = !_isUndefined(numBuckets) ? numBuckets : 10\n        numEnabledBuckets = !_isUndefined(numEnabledBuckets) ? numEnabledBuckets : 10\n        let charCodeSum = 0\n        for (let i = 0; i < token.length; i++) {\n            charCodeSum += token.charCodeAt(i)\n        }\n        return charCodeSum % numBuckets < numEnabledBuckets\n    },\n\n    isBrowserSupported: function (): boolean {\n        return _isFunction(document.querySelectorAll)\n    },\n}\n\n_bind_instance_methods(autocapture)\n_safewrap_instance_methods(autocapture)\n\nexport { autocapture }\n"]}